@page "/readytopick"
@using WarehouseRevolver.CoreBusiness
@inject ISnackbar Snackbar
@inject IReadbel_warehouse_revolver_readytopickUseCase readbel_warehouse_revolver_readytopickUseCase
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="ma-0">
    <MudPaper Elevation="3" Class="pa-0">
        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h2" Color="Color.Primary" Class="ma-3" Align="Align.Center">Ready to Pick</MudText>
                <MudTable Items="@_orders" Dense="true" Hover="true" @bind-SelectedItem="_selectedOrder"
                          Filter="new Func<bel_warehouse_revolver_readytopick, bool>(FilterFunc)">
                    <HeaderContent>
                        <MudTh><MudText Typo="Typo.h6" Style="font-weight: 600;">Pick Ticket</MudText></MudTh>
                        <MudTh><MudText Typo="Typo.h6" Style="font-weight: 600;">Order No</MudText></MudTh>
                        <MudTh><MudText Typo="Typo.h6" Style="font-weight: 600;">Printed</MudText></MudTh>
                        <MudTh><MudText Typo="Typo.h6" Style="font-weight: 600;">Lines</MudText></MudTh>
                        <MudTh><MudText Typo="Typo.h6" Style="font-weight: 600;">Weight</MudText></MudTh>
                        <MudTh><MudText Typo="Typo.h6" Style="font-weight: 600;">Printer</MudText></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Pick Ticket"><MudText Typo="Typo.h6">@context.pick_ticket_no</MudText></MudTd>
                        <MudTd DataLabel="Order No"><MudText Typo="Typo.h6">@context.order_no</MudText></MudTd>
                        <MudTd DataLabel="Date Printed"><MudText Typo="Typo.h6">@context.Date_Printed</MudText></MudTd>
                        <MudTd DataLabel="Lines"><MudText Typo="Typo.h6">@context.lines</MudText></MudTd>
                        <MudTd DataLabel="Weight"><MudText Typo="Typo.h6">@context.weight.ToString("F2")</MudText></MudTd>
                        <MudTd DataLabel="Printer"><MudText Typo="Typo.h6">@context.printer_name</MudText></MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSize="25" PageSizeOptions="new int[] { 25, 50, 100 }" />
                    </PagerContent>
                </MudTable>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    private string _searchString = "";
    private bel_warehouse_revolver_readytopick _selectedOrder;
    private List<bel_warehouse_revolver_readytopick> _orders = new();
    private System.Threading.Timer? _navigationTimer;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();

        // Set up timer for navigation
        _navigationTimer = new System.Threading.Timer(NavigateToWarehouseActivity, null, 10000, Timeout.Infinite);
    }

    private void NavigateToWarehouseActivity(object? state)
    {
        InvokeAsync(() =>
        {
            NavigationManager.NavigateTo("/warehouseactivity");
            _navigationTimer?.Dispose();
        });
    }

    private async Task LoadData()
    {
        _orders = readbel_warehouse_revolver_readytopickUseCase.Execute();
    }

    private async Task RefreshData()
    {
        await LoadData();
        Snackbar.Add("Data refreshed successfully!", Severity.Success);
    }

    private bool FilterFunc(bel_warehouse_revolver_readytopick order)
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        return order.pick_ticket_no.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase)
            || order.order_no.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase)
            || order.printer_name.Contains(_searchString, StringComparison.OrdinalIgnoreCase)
            || order.Date_Printed.Contains(_searchString, StringComparison.OrdinalIgnoreCase);
    }

    public void Dispose()
    {
        _navigationTimer?.Dispose();
    }
}